-- Drop tables in an order where tables with no foreign keys are dropped first
DROP TABLE DEDUCTION;
DROP TABLE TAX;
DROP TABLE PAYMENT;
DROP TABLE SALARY;

-- Now drop the tables with foreign key constraints
DROP TABLE EMPLOYEE;
DROP TABLE DESIGNATION;

-- Now, recreate the tables

-- DESIGNATION table
CREATE TABLE DESIGNATION (
    DESIGNATION_ID VARCHAR2(100) NOT NULL PRIMARY KEY,
    TITLE VARCHAR2(100) NOT NULL UNIQUE
);

-- EMPLOYEE table
CREATE TABLE EMPLOYEE (
    EMPLOYEE_ID VARCHAR2(100) NOT NULL PRIMARY KEY,
    NAME VARCHAR2(100) NOT NULL,
    DESIGNATION_ID VARCHAR2(100) UNIQUE REFERENCES DESIGNATION(DESIGNATION_ID)
);

-- SALARY table
CREATE TABLE SALARY (
    SALARY_ID VARCHAR2(100) NOT NULL PRIMARY KEY,
    EMPLOYEE_ID VARCHAR2(100) UNIQUE REFERENCES EMPLOYEE(EMPLOYEE_ID),
    AMOUNT NUMBER(10,2) NOT NULL CHECK (AMOUNT >= 0)
);

-- PAYMENT table
CREATE TABLE PAYMENT (
    PAYMENT_ID VARCHAR2(100) NOT NULL PRIMARY KEY,
    EMPLOYEE_ID VARCHAR2(100) REFERENCES EMPLOYEE(EMPLOYEE_ID),
    AMOUNT NUMBER(10,2) NOT NULL CHECK (AMOUNT >= 0),
    DATE_RECEIVED DATE DEFAULT SYSDATE
);

-- TAX table
CREATE TABLE TAX (
    TAX_ID VARCHAR2(100) NOT NULL PRIMARY KEY,
    EMPLOYEE_ID VARCHAR2(100) REFERENCES EMPLOYEE(EMPLOYEE_ID),
    TAX_AMOUNT NUMBER(10,2) NOT NULL CHECK (TAX_AMOUNT >= 0)
);

-- DEDUCTION table
CREATE TABLE DEDUCTION (
    DEDUCTION_ID VARCHAR2(100) NOT NULL PRIMARY KEY,
    EMPLOYEE_ID VARCHAR2(100) REFERENCES EMPLOYEE(EMPLOYEE_ID),
    DEDUCTION_AMOUNT NUMBER(10,2) NOT NULL CHECK (DEDUCTION_AMOUNT >= 0),
    REASON VARCHAR2(200)
);

-- QUERY 1: Retrieve all managers from DESIGNATION table
SELECT * FROM DESIGNATION WHERE TITLE = 'Manager';
-- QUERY 2
SELECT NAME, DESIGNATION_ID FROM EMPLOYEE WHERE NAME LIKE 'A%';
--QUERY 3
SELECT EMPLOYEE_ID, AMOUNT FROM SALARY WHERE AMOUNT > 50000;
-- QUERY 4
SELECT EMPLOYEE_ID, AMOUNT, DATE_RECEIVED FROM PAYMENT WHERE DATE_RECEIVED > '01-JAN-2023';
--QUERY 5
SELECT EMPLOYEE_ID, TAX_AMOUNT FROM TAX WHERE TAX_AMOUNT > 1000;
-- QUERY 6
SELECT EMPLOYEE_ID, DEDUCTION_AMOUNT, REASON FROM DEDUCTION WHERE DEDUCTION_AMOUNT < 500;

-- COMPLEX 
SELECT E.NAME, D.TITLE, S.AMOUNT 
FROM EMPLOYEE E, DESIGNATION D, SALARY S 
WHERE E.DESIGNATION_ID = D.DESIGNATION_ID AND E.EMPLOYEE_ID = S.EMPLOYEE_ID;






